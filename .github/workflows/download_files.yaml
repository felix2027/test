name: Download Files from Config

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write

jobs:
  download_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PyYAML and requests
        run: |
          pip install pyyaml
          pip install requests

      - name: Read config and download files
        run: |
          python -c "
          import yaml
          import os
          import urllib.request
          import requests

          config_file = 'download_config.yaml'

          with open(config_file, 'r') as f:
              config = yaml.safe_load(f)

          files_to_download = [] #  用于存放最终的文件下载配置列表


          #  ---  处理单个文件下载配置 (files 列表)  --- (与之前相同， 无需修改)
          if 'files' in config and isinstance(config['files'], list):
              print('Using individual file download configuration from \"files\" section.')
              files_config = config['files']
              for file_config in files_config:
                  filename = file_config.get('filename')
                  url = file_config.get('url')
                  download_location = file_config.get('download_location')

                  if filename and url and download_location:
                      files_to_download.append({
                          'filename': filename,
                          'url': url,
                          'download_location': download_location
                      })
                  else:
                      print(f'Warning: Incomplete file configuration found in \"files\" section. Skipping: {file_config}')


          #  ---  处理批量文件夹下载配置 (folders 列表)  --- (修改部分)
          if 'folders' in config and isinstance(config['folders'], list):
              print('Using folder-based batch download configuration from \"folders\" section.')
              folders_config = config['folders']
              for folder_config in folders_config: #  遍历 folders 列表
                  github_repo = folder_config.get('github_repo') #  从当前文件夹配置中获取 github_repo  (修改点!)
                  folder_path = folder_config.get('folder_path')
                  file_extension = folder_config.get('file_extension')
                  backup_location = folder_config.get('backup_location')

                  if github_repo and folder_path and file_extension and backup_location: #  检查文件夹配置是否完整 (新增 github_repo 检查)
                      api_url = f'https://api.github.com/repos/{github_repo}/contents/{folder_path}' #  使用从文件夹配置中获取的 github_repo 构建 API URL (修改点!)

                      try:
                          response = requests.get(api_url)
                          response.raise_for_status()
                          files_data = response.json()
                      except requests.exceptions.RequestException as e:
                          print(f'Error fetching file list from GitHub API for folder \"{folder_path}\" in repository \"{github_repo}\": {e}') #  错误信息中包含仓库名
                          continue

                      for file_info in files_data:
                          if file_info['type'] == 'file' and file_info['name'].endswith(file_extension):
                              filename = file_info['name']
                              download_url = file_info['download_url']
                              backup_filepath = os.path.join(backup_location, filename)

                              files_to_download.append({
                                  'filename': filename,
                                  'url': download_url,
                                  'download_location': backup_location
                              })
                  else:
                      print(f'Warning: Incomplete folder configuration found in \"folders\" section. Skipping: {folder_config}') # 警告信息


          else:
              print('No valid download configuration found in download_config.yaml. Please define either \"files\" section or \"folders\" section.')
              exit(1)


          if files_to_download: #  执行文件下载和备份 (与之前相同， 无需修改)
              print(f'Found {len(files_to_download)} files to download:')
              for file_config in files_to_download:
                  filename = file_config['filename']
                  url = file_config['url']
                  download_location = file_config['download_location']

                  os.makedirs(download_location, exist_ok=True)
                  download_path = os.path.join(download_location, filename)

                  print(f'Downloading {filename} from {url} to {download_path}')
                  try:
                      headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36'}
                      req = urllib.request.Request(url, headers=headers)
                      with urllib.request.urlopen(req) as response:
                          content = response.read()
                          with open(download_path, 'wb') as f:
                              f.write(content)
                      print(f'Downloaded {filename} successfully to {download_path}')
                      print(f'File exists at: {download_path}')
                      print(f'Contents of download_location: {os.listdir(download_location)}')
                  except Exception as e:
                      print(f'Error downloading {filename} from {url}: {e}')
          else:
              print('No files to download based on the configuration.')

          "

      - name: Commit files
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --force .
          git commit -m "Daily update"
          git push
